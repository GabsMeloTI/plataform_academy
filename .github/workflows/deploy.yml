name: "[DEPLOY] Docker Build and Deploy"

on:
  push:
    branches:
      - main

jobs:
  deploy-to-ec2-main:
    name: Deploy to EC2 (main)
    runs-on: ubuntu-latest
    if: github.ref_name == 'main'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Conectar ao EC2 e Atualizar o Container main
        env:
          EC2_USER: ubuntu
          EC2_HOST: ${{ secrets.EC2_PUBLIC_IP }}
          SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          echo "$SSH_KEY" > private_key.pem
          chmod 600 private_key.pem

          # Adiciona a chave privada ao ssh-agent
          eval "$(ssh-agent -s)"
          ssh-add private_key.pem

          # Configura o Git para usar SSH
          git config --global url."git@github.com:".insteadOf "https://github.com/"

          ssh -o StrictHostKeyChecking=no -i private_key.pem $EC2_USER@$EC2_HOST << 'EOF'
            set -e

            echo "Acessando diretório do projeto..."
            cd /home/ubuntu/project/plataform_academy

            echo "Atualizando código..."
            git fetch --all
            git checkout main
            git reset --hard origin/main

            echo "Construindo imagem Docker..."
            docker build -t go-app .

            echo "Parando container antigo..."
            docker ps -q -f name=go-fit-container && docker stop go-fit-container || true
            docker ps -a -q -f name=go-fit-container && docker rm go-fit-container || true

            echo "Executando novo container..."
            docker run -d -p 8080:8080 --env-file cmd/api/.env --name go-fit-container go-app

            echo "Limpando imagens antigas..."
            docker image prune -f

            echo "Deploy concluído!"
          EOF

          rm -f private_key.pem
